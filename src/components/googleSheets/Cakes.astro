---
import CakesIcon from '../icon/CakesIcon.astro';
---

<div id='menuCAKES'>
  <CakesIcon />
</div>

<script is='inline'>
  const cakesContainer = document.getElementById('menuCAKES');

  function generateItemHTML(itemName, itemData) {
    const itemHTML = `
      <div class="item">
        <div class="title">
          <h3>${itemData.Name}</h3>
          <div class="price"></div>
        </div>
        <div>${itemData.OnHand > 0 ? `${itemData.OnHand} ready to go!` : `Prep time may take up to 24hrs`}</div>
        <p>${itemData.Description} <br><i>Nutrition: ${itemData.Nutrition}</i></p>
      </div>
    `;
    return itemHTML;
  }

  fetch(
    `https://opensheet.elk.sh/1WtA0wRGybu9K4c0jRy1lp0d3IUG2u0r0Kf19M985cGQ/CAKES`,
  )
    .then((response) => response.json())
    .then((data) => {
      // Check if the specified category exists in the menu data
      const categoryData = data;
      if (!categoryData) {
        console.error('CAKES category not found in the menu data.');
        return;
      }
      // Check if any item is available in the category
      const anyItemAvailable = Object.values(data).some(
        (item) => item.Available,
      );

      // If no item is available, hide the container
      if (!anyItemAvailable) {
        cakesContainer.style.display = 'none';
        //console.log('noItemAvailable ' + anyItemAvailable);
        return;
      } else {
        //console.log('anyItemAvailable ' + anyItemAvailable);
      }

      // Generate HTML content for menu
      const categoryDiv = document.createElement('div');
      categoryDiv.classList.add('category');

      // Create heading for category
      const categoryHeading = document.createElement('h2');
      categoryHeading.classList.add('title');
      categoryHeading.textContent = 'CAKES';
      categoryDiv.appendChild(categoryHeading);

      // Loop through items in the category
      Object.entries(data).forEach(([itemName, itemData]) => {
        if (itemData.Available == 'TRUE') {
          //console.log('Item is available:', itemData.Name);
          const itemHTML = generateItemHTML(itemName, itemData);
          categoryDiv.innerHTML += itemHTML;
        } else {
          //console.log('Item not available:', itemData.Name);
        }
      });

      // Append category div to grilled container
      cakesContainer.appendChild(categoryDiv);
    })
    .catch((error) => console.error('Error fetching menu data:', error));
</script>
